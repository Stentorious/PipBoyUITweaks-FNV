int	iMenuID
int iType
int iComp
int iModSlot
int iModMask
int iModType
int iSlotMask
float fEquipWg
float fEquipVal
float fEquipStr
float fItemWg
float fItemVal
float fItemStr
float fItemRoF
float fItemCrit
float iColor
ref rItem
string_var sUIPath

begin Function {iMenuID}

	; Check if selected inventory weapon/armor should have stat colors and/or extended stat comparisons
	rItem = GetSelectedItemRef
	if eval IsFormValid rItem && GetActiveUIComponentID == 29
		iType = rItem.GetType
		if iType == 40 || iType == 24

			Goo1.AuxVarSetFlt "*PUI_FLAG" 1
			iColor = Goo1.AuxVarGetFlt "*PUI_INI" 3

			; Calculate item weight
			fItemWg = rItem.GetWeight

			if eval iType == 40

				; Calculate item mod effects
				iModMask = rItem.GetWeaponRefModFlags
				fItemRoF = rItem.GetFireRate
				iModSlot = 0
				while 4 > (iModSlot += 1)
					if GetBit iModMask (iModSlot - 1) == 1
						iModType = rItem.GetWeaponItemModEffect iModSlot
						if eval iModType == 4
							fItemWg -= rItem.GetWeaponItemModValue1 iModSlot
						elseif eval iModType == 8
							fItemRoF *= (1 + (rItem.GetWeaponItemModValue1 iModSlot))
						endif
					endif
				loop

				; "Adjust Heavy Weapon Weight" perk modifier
				if eval fItemWg >= 10
					fItemWg = Player.GetPerkModifier 73 fItemWg
				endif

				; Update weapon critical chance
				if Goo1.AuxVarGetFlt "*PUI_INI" 13 == 1
					fItemCrit = Floor (Player.GetAV CritChance)
					if eval rItem.GetIsAutomatic && Goo1.AuxVarGetFlt "*_Tweaks:bCritChanceIgnoresFireRate" == 0
						fItemCrit /= fItemRoF
					endif
					fItemCrit *= rItem.GetCritPerc
					SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\CritInfo\_value" "%.2f%%" (GetMaxOf 0 (GetMinOf 100 (Player.GetPerkModifier 1 fItemCrit rItem Goo1)))
				endif

			endif

			; Extended stat comparison
			if Goo1.AuxVarGetFlt "*PUI_INI" 0 == 1

				; Get weapon stats
				if iType == 40
					if eval Player.GetEquippedWeaponRef
						iComp = 1
						fEquipStr = Goo1.AuxVarGetFlt "*PUI_Stat" 0
						fEquipWg = Goo1.AuxVarGetFlt "*PUI_Stat" 1
						fEquipVal = Goo1.AuxVarGetFlt "*PUI_Stat" 2
						fItemStr = GetMaxOf 0 ((rItem.GetReqStr) - Player.GetPerkModifier 53 0 rItem)

						; Update STR color
						if fItemStr > fEquipStr
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\_value") + "+")
							if iColor == 1
								SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\CI_ValueText\systemcolor" 3
							endif
						elseif fItemStr < fEquipStr
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\_value") + "-")
							if iColor == 1
								SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\CI_ValueText\systemcolor" 2
							endif
						elseif iColor == 1
							SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\CI_ValueText\systemcolor" 4
						endif

					endif

				; Get armor stats
				else
					iSlotMask = rItem.GetESM
					If eval GetBit iSlotMask 2
						iComp = 1
						fEquipWg = Goo1.AuxVarGetFlt "*PUI_Stat" 3
						fEquipVal = Goo1.AuxVarGetFlt "*PUI_Stat" 4
					elseif iSlotMask == 18432
						iComp = 1
						fEquipWg = Goo1.AuxVarGetFlt "*PUI_Stat" 5
						fEquipVal = Goo1.AuxVarGetFlt "*PUI_Stat" 6
					elseif rItem.GetEquipType == 8
						iComp = 1
						fEquipWg = Goo1.AuxVarGetFlt "*PUI_Stat" 7
						fEquipVal = Goo1.AuxVarGetFlt "*PUI_Stat" 8
					endif
				endif

				; Update WG/VAl on valid stat comparison
				if iComp == 1

					; "Modify Light Items" perk modifier
					if eval fItemWg <= 2 && Player.GetPerkModifier 55 0 == 1
						fItemWg /= 2
					endif

					; "bWeightlessItems" lStewieAl Tweak
					if eval Goo1.AuxVarGetFlt "*_Tweaks:bWeightlessItems" 0 == 1
						if eval iType == 40 ; Weapon
							fItemWg *= Goo1.AuxVarGetFlt "*_Tweaks:bWeightlessItems" 5
						elseif eval iType == 24 ; Armor
							fItemWg *= Goo1.AuxVarGetFlt "*_Tweaks:bWeightlessItems" 3
						endif
					endif

					if fEquipWg > fItemWg
						if fItemWg != 0
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\_value") + "+")
						endif
						if iColor == 1
							SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\CI_ValueText\systemcolor" 3
						endif
					elseif fEquipWg < fItemWg
						if fItemWg != 0
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\_value") + "-")
						endif
						if iColor == 1
							SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\CI_ValueText\systemcolor" 2
						endif
					elseif iColor == 1
						SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\CI_ValueText\systemcolor" 4
					endif

					; Update VAL color
					fItemVal = rItem.GetCalculatedItemValue
					if fItemVal > fEquipVal
						if fItemVal != 0
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\_value") + "+")
						endif
						if iColor == 1
							SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\CI_ValueText\systemcolor" 3
						endif
					elseif fItemVal < fEquipVal
						if fItemVal != 0
							SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\_value" ((GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\_value") + "-")
						endif
						if iColor == 1
							SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\CI_ValueText\systemcolor" 2
						endif
					elseif iColor == 1
						SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\CI_ValueText\systemcolor" 4
					endif

				; Reset color if selecting weapon/armor item without valid stat comparison
				else
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\CI_ValueText\systemcolor" 4
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\CI_ValueText\systemcolor" 4
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\CI_ValueText\systemcolor" 4
				endif
			endif

			; Update DAM/DPS/DR/DT color
			if iColor == 1
				if iType == 40
					sUIPath = GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DAMInfo\CI_ValueText\string"
					iColor = 4
					if eval sUIPath[-1] == "+"
						iColor = 3
					elseif eval sUIPath[-1] == "-"
						iColor = 2
					endif
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DAMInfo\CI_ValueText\systemcolor" iColor
					sUIPath = GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DPSInfo\CI_ValueText\string"
					iColor = 4
					if eval sUIPath[-1] == "+"
						iColor = 3
					elseif eval sUIPath[-1] == "-"
						iColor = 2
					endif
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DPSInfo\CI_ValueText\systemcolor" iColor
				else
					sUIPath = GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DamageResistInfo\CI_ValueText\string"
					iColor = 4
					if eval sUIPath[-1] == "+"
						iColor = 3
					elseif eval sUIPath[-1] == "-"
						iColor = 2
					endif
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DamageResistInfo\CI_ValueText\systemcolor" iColor
					sUIPath = GetUIString "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DamageThresholdInfo\CI_ValueText\string"
					iColor = 4
					if eval sUIPath[-1] == "+"
						iColor = 3
					elseif eval sUIPath[-1] == "-"
						iColor = 2
					endif
					SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\DamageThresholdInfo\CI_ValueText\systemcolor" iColor
				endif
			endif

			; Set AmmoInfo icon
			if Goo1.AuxVarGetFlt "*PUI_INI" 14 == 1
				sUIPath = rItem.ySIGetTrait "filename"

				; Set armor class icon if armor
				iType = GetArmorClass (rItem.gbo)
				if iType == 1
					sUIPath = "interface\icons\Apparel_ArmorA_Light.dds"
				elseif iType == 2
					sUIPath = "interface\icons\Apparel_ArmorB_Medium.dds"
				elseif iType == 3
					sUIPath = "interface\icons\Apparel_ArmorC_Heavy.dds"

				; Set ammo icon if weapon uses ammo
				else
					rItem = rItem.GetWeaponAmmo
					if eval IsFormValid rItem
						if GetType rItem == 85
							rItem = ListGetNthForm rItem 0
						endif
						sUIPath = ySIGetTrait "filename" rItem
					endif
				endif

				SetUIStringAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\AmmoInfo\ySIImage\filename" (sUIPath)
			endif

		; Reset color if selecting non weapon/armor item
		elseif Goo1.AuxVarGetFlt "*PUI_FLAG" == 1
			Goo1.AuxVarSetFlt "*PUI_FLAG" 0
			SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\WeightInfo\CI_ValueText\systemcolor" 4
			SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\ValueInfo\CI_ValueText\systemcolor" 4
			SetUIFloatAlt "InventoryMenu\GLOW_BRANCH\IM_MainRect\IM_ItemInfoRect\StrengthReqInfo\CI_ValueText\systemcolor" 4
		endif
	endif

	sv_Destruct sUIPath

end